//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\jdvorak\Dropbox\Skola\FJP\HappyLanguage\Happy_language\Grammar.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Happy_language {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class GrammarBaseListener : IGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] GrammarParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] GrammarParser.StartContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_con_var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_con_var([NotNull] GrammarParser.Def_con_varContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_con_var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_con_var([NotNull] GrammarParser.Def_con_varContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_const"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_const([NotNull] GrammarParser.Def_constContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_const"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_const([NotNull] GrammarParser.Def_constContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_var([NotNull] GrammarParser.Def_varContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_var([NotNull] GrammarParser.Def_varContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_var_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_var_expression([NotNull] GrammarParser.Def_var_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_var_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_var_expression([NotNull] GrammarParser.Def_var_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_var_from_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_var_from_function([NotNull] GrammarParser.Def_var_from_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_var_from_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_var_from_function([NotNull] GrammarParser.Def_var_from_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call([NotNull] GrammarParser.Function_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call([NotNull] GrammarParser.Function_callContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_var_blok"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_var_blok([NotNull] GrammarParser.Def_var_blokContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_var_blok"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_var_blok([NotNull] GrammarParser.Def_var_blokContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.par_in_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPar_in_function([NotNull] GrammarParser.Par_in_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.par_in_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPar_in_function([NotNull] GrammarParser.Par_in_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_functions([NotNull] GrammarParser.Def_functionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_functions([NotNull] GrammarParser.Def_functionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.def_one_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_one_function([NotNull] GrammarParser.Def_one_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.def_one_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_one_function([NotNull] GrammarParser.Def_one_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.function_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_return([NotNull] GrammarParser.Function_returnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.function_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_return([NotNull] GrammarParser.Function_returnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.function_return_data_typ"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_return_data_typ([NotNull] GrammarParser.Function_return_data_typContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.function_return_data_typ"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_return_data_typ([NotNull] GrammarParser.Function_return_data_typContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.data_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData_type([NotNull] GrammarParser.Data_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.data_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData_type([NotNull] GrammarParser.Data_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain([NotNull] GrammarParser.MainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain([NotNull] GrammarParser.MainContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.blok_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlok_function([NotNull] GrammarParser.Blok_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.blok_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlok_function([NotNull] GrammarParser.Blok_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.blok"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlok([NotNull] GrammarParser.BlokContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.blok"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlok([NotNull] GrammarParser.BlokContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf([NotNull] GrammarParser.IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf([NotNull] GrammarParser.IfContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse([NotNull] GrammarParser.ElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse([NotNull] GrammarParser.ElseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile([NotNull] GrammarParser.WhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile([NotNull] GrammarParser.WhileContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor([NotNull] GrammarParser.ForContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor([NotNull] GrammarParser.ForContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.for_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_condition([NotNull] GrammarParser.For_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.for_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_condition([NotNull] GrammarParser.For_conditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] GrammarParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] GrammarParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.condition_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition_item([NotNull] GrammarParser.Condition_itemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.condition_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition_item([NotNull] GrammarParser.Condition_itemContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.condition_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition_expression([NotNull] GrammarParser.Condition_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.condition_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition_expression([NotNull] GrammarParser.Condition_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] GrammarParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] GrammarParser.ConditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] GrammarParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] GrammarParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] GrammarParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] GrammarParser.ParametersContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Happy_language
